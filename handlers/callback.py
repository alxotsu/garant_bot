from handlers import functions, keyboards, var
from app.bot import bot

__all__ = ["register_bot_callback_handler"]


def register_bot_callback_handler(data: str):
    def wrapper(handler: callable):
        bot.register_callback_query_handler(handler, lambda call: call.data == data)
        return handler

    return wrapper


@register_bot_callback_handler("output")
def callback_handler(call):
    chat_id = call.message.chat.id
    message_id = call.message.message_id
    info = functions.profile(user_id=chat_id)
    if info[3] == "–ù–µ —É–∫–∞–∑–∞–Ω":
        bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="‚õîÔ∏è –£ –í–∞—Å –Ω–µ —É–∫–∞–∑–∞–Ω –∫–æ—à–µ–ª—ë–∫ –¥–ª—è –≤—ã–≤–æ–¥–∞(Qiwi)!",
            reply_markup=keyboards.qiwi,
        )
    else:
        msg = bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–í–∞—à Qiwi - {qiwi}\n–ë–∞–ª–∞–Ω—Å - {balance} —Ä—É–±–ª–µ–π\n\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞. (–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ –ª—é–±—É—é –±—É–∫–≤—É)".format(
                qiwi=info[3], balance=info[2]
            ),
        )
        bot.register_next_step_handler(msg, output)


@register_bot_callback_handler("qiwi_num")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("seller")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("customer")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("menu")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("bor")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("unban")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("ban")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("edit_balance")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("input")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("check_payment")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("cancel_payment")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("message")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("seller_offer")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("customer_offer")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("proposal_customer")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("proposal_seller")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("delete_customer")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("delete_seller")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("statistics")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("accept_customer")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("accept_seller")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("input_panel")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("price")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("cancel_open")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("No_cancel")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("Yes_cancel")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("Yes_cancel_seller")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("cancel_open_seller")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("Yes_cancel_seller1")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("No_cancel_seller1")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("No_cancel_seller")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("Yes_cancel_customer")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("No_cancel_customer")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("ok")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("ok_cancel")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("ok_ok")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("open_dispute")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("open_dispute_seller")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("dispute_admin")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("customer_true")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("seller_true")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("no_true")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("cancel_open_offer")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("cancel_open_offer_seller")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("reviews")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("add_review")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("up_login")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("no_review")
def callback_handler(call):
    chat_id = call.message.chat.id


@register_bot_callback_handler("cancel_wait")
def callback_handler(call):
    chat_id = call.message.chat.id
    try:
        info = functions.info_offers_seller(chat_id)
        if info[4] == "review":
            functions.close_offer_seller(chat_id)
            bot.send_message(
                chat_id,
                text="‚ùÑÔ∏è –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ, –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±–æ–ª—å—à–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤.",
                reply_markup=keyboards.menu,
            )
            bot.send_message(
                info[1],
                "–ü—Ä–æ–¥–∞–≤–µ—Ü –Ω–µ –∑–∞—Ö–æ—Ç–µ–ª –æ–∂–∏–¥–∞—Ç—å –æ—Ç–∑—ã–≤–∞. –°–¥–µ–ª–∫–∞ –∑–∞–≤–µ—Ä–µ—à–Ω–∞",
                reply_markup=keyboards.menu,
            )
        else:
            bot.send_message(chat_id, var.ERROR)
    except:
        bot.answer_callback_query(
            callback_query_id=call.id, show_alert=True, text=var.ERROR
        )

####################################


    elif call.data == "qiwi_num":
        msg = bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="üìÑ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +70000000000",
        )
        bot.register_next_step_handler(msg, write_qiwi1)

    elif call.data == "seller":
        info = functions.last_offers_seller(chat_id)
        if len(info) > 0:
            bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=info)
        elif len(info) == 0:
            bot.edit_message_text(
                chat_id=chat_id, message_id=message_id, text="‚õîÔ∏è –°–¥–µ–ª–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!"
            )

    elif call.data == "customer":
        info = functions.last_offers_customer(chat_id)
        if len(info) > 0:
            bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=info)
        elif len(info) == 0:
            bot.edit_message_text(
                chat_id=chat_id, message_id=message_id, text="‚õîÔ∏è –°–¥–µ–ª–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!"
            )

    elif call.data == "menu":
        bot.edit_message_text(
            chat_id=call.message.chat.id, message_id=message_id, text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        )

    elif call.data == "bor":
        bot.send_message(chat_id, text="–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=keyboards.bor)

    elif call.data == "unban":
        msg = bot.send_message(
            chat_id,
            text="–í–≤–µ–¥–∏—Ç–µ ID —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–∞–Ω–∏—Ç—å. (–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ –ª—é–±—É—é –±—É–∫–≤—É)",
        )
        bot.register_next_step_handler(msg, unban1)

    elif call.data == "ban":
        msg = bot.send_message(
            chat_id,
            text="–í–≤–µ–¥–∏—Ç–µ ID —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å. (–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ –ª—é–±—É—é –±—É–∫–≤—É)",
        )
        bot.register_next_step_handler(msg, ban1)

    elif call.data == "edit_balance":
        msg = bot.send_message(
            chat_id=chat_id,
            text="–í–≤–µ–¥–∏—Ç–µ ID —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–Ω—Å. (–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ –ª—é–±—É—é –±—É–∫–≤—É)",
        )
        bot.register_next_step_handler(msg, give_balance1)

    elif call.data == "input":
        info = functions.replenish_balance(chat_id)
        bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text=info[0],
            reply_markup=keyboards.replenish_balance,
            parse_mode="HTML",
        )
        bot.send_message(
            chat_id,
            text="–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã",
            reply_markup=types.ReplyKeyboardRemove(),
        )
    elif call.data == "check_payment":
        check = functions.check_payment(user_id=chat_id)
        if check == None:
            bot.send_message(chat_id=chat_id, text="‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        else:
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ\n–°—É–º–º–∞ - " + str(check) + " —Ä—É–±–ª–µ–π",
            )
            bot.send_message(
                ADMIN_FIRST_CHAT_ID,
                text="‚úÖ –ü—Ä–æ–∏–∑–æ—à–ª–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞!\n–°—É–º–º–∞ - "
                     + str(check)
                     + " —Ä—É–±–ª–µ–π",
            )
            bot.send_message(chat_id, text=var.ENABLE_KEYBOARD, reply_markup=keyboards.menu)

    elif call.data == "canel_payment":
        functions.canel_payment(user_id=chat_id)
        bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=f"–ú–µ–Ω—é")
        bot.send_message(chat_id, text="–í–∫–ª—é—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã", reply_markup=keyboards.menu)

    elif call.data == "message":
        msg = bot.send_message(
            chat_id=chat_id,
            text='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏. \n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫!',
        )
        bot.register_next_step_handler(msg, message1)

    elif call.data == "seller_offer":
        msg = bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text='–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–ë–µ–∑ @), —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É. \n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫!',
        )
        bot.register_next_step_handler(msg, search_seller)

    elif call.data == "customer_offer":
        msg = bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text='–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–ë–µ–∑ @), —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É. \n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫!',
        )
        bot.register_next_step_handler(msg, search_customer)

    elif call.data == "proposal_customer":
        try:
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ!",
                reply_markup=keyboards.canel_offer_customer,
            )
            info = functions.info_deal_customer(chat_id)
            info1 = functions.profile(chat_id)
            bot.send_message(
                info[0],
                text="‚úÖ –í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ —Å–¥–µ–ª–∫–µ!",
                reply_markup=types.ReplyKeyboardRemove(),
            )
            bot.send_message(
                info[0],
                "‚ùï id - <b><code>{id}</code></b>\n‚ùï –õ–æ–≥–∏–Ω - @{nick}\n‚ùï –ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ - {offers}\n\nüî• –í —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –≤—ã –ø—Ä–æ–¥–∞–≤–µ—Ü!".format(
                    id=info1[0], offers=info1[1], nick=info1[5]
                ),
                reply_markup=keyboards.choise_seller,
                parse_mode="HTML",
            )
        except:
            bot.send_message(chat_id, text=var.ERROR)

    elif call.data == "proposal_seller":
        try:
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ!",
                reply_markup=keyboards.canel_offer_seller,
            )
            info = functions.info_deal_seller(chat_id)
            info1 = functions.profile(chat_id)
            bot.send_message(
                info[0],
                text="‚úÖ –í–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ —Å–¥–µ–ª–∫–µ!",
                reply_markup=types.ReplyKeyboardRemove(),
            )
            bot.send_message(
                info[0],
                "‚ùï id - <b><code>{id}</code></b>\n‚ùï –õ–æ–≥–∏–Ω - @{nick}\n‚ùï –ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ - {offers}\n\nüî• –í —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –≤—ã –ø–æ–∫—É–ø–∞—Ç–µ–ª—å!".format(
                    id=info1[0], offers=info1[1], nick=info1[5]
                ),
                reply_markup=keyboards.choise,
                parse_mode="HTML",
            )
        except:
            bot.send_message(chat_id, text=var.ERROR)

    elif call.data == "delete_customer":
        try:
            info = functions.info_offers_customer(chat_id)
            if info[4] == "dont_open":
                functions.delete_customer(chat_id)
                bot.edit_message_text(
                    chat_id=chat_id, message_id=message_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞."
                )
                bot.send_message(chat_id, text=var.ENABLE_KEYBOARD, reply_markup=keyboards.menu)
                bot.send_message(
                    info[0],
                    text="üåß –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–∫–ª–æ–Ω–∏–ª–∏, –∏–ª–∏ —Å –≤–∞–º–∏ –ø—ã—Ç–∞–ª–∏—Å—å –µ—ë –ø—Ä–æ–≤–µ—Å—Ç–∏, –Ω–æ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏.",
                    reply_markup=keyboards.menu,
                )
            else:
                bot.send_message(
                    chat_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ —É–∂–µ –Ω–∞—á–∞—Ç–∞, –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–º–µ–Ω–µ–Ω–∞."
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "delete_seller":
        try:
            info = functions.info_offers_seller(chat_id)
            if info[4] == "dont_open":
                functions.delete_seller(chat_id)
                bot.edit_message_text(
                    chat_id=chat_id, message_id=message_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞."
                )
                bot.send_message(chat_id, text=var.ENABLE_KEYBOARD, reply_markup=keyboards.menu)
                bot.send_message(
                    info[1],
                    text="üåß –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–∫–ª–æ–Ω–∏–ª–∏, –∏–ª–∏ —Å –≤–∞–º–∏ –ø—ã—Ç–∞–ª–∏—Å—å –µ—ë –ø—Ä–æ–≤–µ—Å—Ç–∏, –Ω–æ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏.",
                    reply_markup=keyboards.menu,
                )
            else:
                bot.send_message(
                    chat_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ —É–∂–µ –Ω–∞—á–∞—Ç–∞, –∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç–º–µ–Ω–µ–Ω–∞."
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "statistics":
        bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text=functions.stats(),
            reply_markup=keyboards.admin,
        )

    elif call.data == "accept_customer":
        try:
            functions.accept_customer(chat_id)
            info = functions.info_offers_customer(chat_id)
            info_c = functions.profile(info[1])
            info_s = functions.profile(info[0])
            sum_offer = info[2]
            status = info[4]
            if sum_offer == None:
                sum_offer = "0"
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="üí∞ –°–¥–µ–ª–∫–∞ ‚Ññ{id}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - {customer_id}(@{customer_nick})\nüíé –ü—Ä–æ–¥–∞–≤–µ—Ü - {seller_id}(@{seller_nick})\n\nüí≥ –°—É–º–º–∞ - {sum} —Ä—É–±–ª–µ–π\nüìÑ –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ - {status}".format(
                    id=info[3],
                    customer_id=info_c[0],
                    customer_nick=info_c[5],
                    seller_id=info_s[0],
                    seller_nick=info_s[5],
                    sum=sum_offer,
                    status=status,
                ),
                reply_markup=keyboards.customer_panel,
            )
            bot.send_message(
                info_s[0],
                text="üí∞ –°–¥–µ–ª–∫–∞ ‚Ññ{id}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - {customer_id}(@{customer_nick})\nüíé –ü—Ä–æ–¥–∞–≤–µ—Ü - {seller_id}(@{seller_nick})\n\nüí≥ –°—É–º–º–∞ - {sum} —Ä—É–±–ª–µ–π\nüìÑ –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ - {status}".format(
                    id=info[3],
                    customer_id=info_c[0],
                    customer_nick=info_c[5],
                    seller_id=info_s[0],
                    seller_nick=info_s[5],
                    sum=sum_offer,
                    status=status,
                ),
                reply_markup=keyboards.seller_panel,
            )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "accept_seller":
        try:
            functions.accept_seller(chat_id)
            info = functions.info_offers_seller(chat_id)
            info_c = functions.profile(info[1])
            info_s = functions.profile(info[0])
            sum_offer = info[2]
            status = info[4]
            if sum_offer == None:
                sum_offer = "0"
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="üí∞ –°–¥–µ–ª–∫–∞ ‚Ññ{id}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - {customer_id}(@{customer_nick})\nüíé –ü—Ä–æ–¥–∞–≤–µ—Ü - {seller_id}(@{seller_nick})\n\nüí≥ –°—É–º–º–∞ - {sum} —Ä—É–±–ª–µ–π\nüìÑ –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ - {status}".format(
                    id=info[3],
                    customer_id=info_c[0],
                    customer_nick=info_c[5],
                    seller_id=info_s[0],
                    seller_nick=info_s[5],
                    sum=sum_offer,
                    status=status,
                ),
                reply_markup=keyboards.seller_panel,
            )
            bot.send_message(
                info_c[0],
                text="üí∞ –°–¥–µ–ª–∫–∞ ‚Ññ{id}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - {customer_id}(@{customer_nick})\nüíé –ü—Ä–æ–¥–∞–≤–µ—Ü - {seller_id}(@{seller_nick})\n\nüí≥ –°—É–º–º–∞ - {sum} —Ä—É–±–ª–µ–π\nüìÑ –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ - {status}".format(
                    id=info[3],
                    customer_id=info_c[0],
                    customer_nick=info_c[5],
                    seller_id=info_s[0],
                    seller_nick=info_s[5],
                    sum=sum_offer,
                    status=status,
                ),
                reply_markup=keyboards.customer_panel,
            )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "input_panel":
        try:
            info = functions.profile(chat_id)
            offer = functions.info_offers_customer(chat_id)
            if offer[2] == None:
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="‚õîÔ∏è –ü—Ä–æ–¥–∞–≤–µ—Ü –Ω–µ —É–∫–∞–∑–∞–ª —Å—É–º–º—É!",
                )
            else:
                if offer[4] == "success":
                    bot.answer_callback_query(
                        callback_query_id=call.id,
                        show_alert=True,
                        text="–í—ã —É–∂–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —Ç–æ–≤–∞—Ä, –ø—Ä–æ–¥–∞–≤–µ—Ü –æ–±—è–∑–∞–Ω –≤–∞–º –µ–≥–æ –ø–µ—Ä–µ–¥–∞—Ç—å. –ï—Å–ª–∏ –ø—Ä–æ–¥–∞–≤–µ—Ü –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä, –æ—Ç–∫—Ä–æ–π—Ç–µ —Å–ø–æ—Ä.",
                    )
                else:
                    if float(info[2]) < float(offer[2]):
                        bot.send_message(
                            chat_id,
                            text="üìâ –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å!\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å - {user} —Ä—É–±–ª–µ–π\nüí≥ –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–π –±–∞–ª–∞–Ω—Å - {offer} —Ä—É–±–ª–µ–π\n\n–î–ª—è —ç—Ç–æ–≥–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É!".format(
                                user=info[2], offer=offer[2]
                            ),
                        )
                    else:
                        bal = float(info[2]) - float(offer[2])
                        functions.success(chat_id, bal)
                        info = functions.info_offers_customer(chat_id)
                        bot.send_message(
                            info[0],
                            text="‚úÖ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –æ–ø–ª–∞—Ç–∏–ª —Ç–æ–≤–∞—Ä! \n–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä.",
                        )
                        bot.send_message(
                            info[1],
                            text="‚úÖ –¢–æ–≤–∞—Ä –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞. –ï—Å–ª–∏ —Ç–æ—Ç –Ω–µ –≤–∞–ª–∏–¥, –∏–ª–∏ –ø—Ä–æ–¥–∞–≤–µ—Ü –∫–∏–Ω—É–ª –≤ –ß–°, –æ—Ç–∫—Ä–æ–π—Ç–µ —Å–ø–æ—Ä.",
                        )
        except:
            bot.send_message(chat_id, text=var.ERROR)

    elif call.data == "price":
        try:
            info = functions.info_offers_seller(chat_id)
            if info[2] == None:
                msg = bot.send_message(
                    chat_id,
                    text='–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ç–æ–≤–∞—Ä–∞. \n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫!',
                )
                bot.register_next_step_handler(msg, price)
            else:
                bot.send_message(
                    chat_id,
                    text="–í—ã —É–∂–µ –≤–≤–µ–ª–∏ —Å—É–º–º—É —Ç–æ–≤–∞—Ä–∞, –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –µ—ë —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å!",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "canel_open":
        bot.send_message(
            chat_id,
            text="–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É?",
            reply_markup=keyboards.choise_canel,
        )

    elif call.data == "No_canel":
        bot.answer_callback_query(
            callback_query_id=call.id,
            show_alert=True,
            text="–ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ã —Å–¥–µ–ª–∫–∏ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω",
        )

    elif call.data == "Yes_canel":
        try:
            info = functions.info_offers_customer(chat_id)
            if info[4] == "open":
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–º–µ–Ω—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–æ–¥–∞–≤—Ü—É",
                )
                bot.send_message(
                    info[0],
                    text="–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –ø—Ä–µ–¥–ª–æ–∂–∏–ª –æ—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É.",
                    reply_markup=keyboards.choise_canel_seller2,
                )
            else:
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="–°–¥–µ–ª–∫–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–ø–æ—Ä.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "Yes_canel_seller":
        try:
            info = functions.info_offers_seller(chat_id)
            if info[4] == "open":
                functions.yes_canel_seller2(chat_id)
                bot.send_message(
                    info[0], text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=keyboards.menu
                )
                bot.send_message(
                    info[1], text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=keyboards.menu
                )
            else:
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="‚úÖ –°–¥–µ–ª–∫–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–ø–æ—Ä.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "canel_open_seller":
        bot.send_message(
            chat_id,
            text="–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É?",
            reply_markup=keyboards.choise_canel_seller,
        )

    elif call.data == "Yes_canel_seller1":
        try:
            info = functions.info_offers_seller(chat_id)
            if info[4] == "open":
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–º–µ–Ω—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–∫—É–ø–∞—Ç–µ–ª—é",
                )
                bot.send_message(
                    info[1],
                    text="–ü—Ä–æ–¥–∞–≤–µ—Ü –ø—Ä–µ–¥–ª–æ–∂–∏–ª –æ—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É.",
                    reply_markup=keyboards.choise_canel_customer,
                )
            else:
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="–°–¥–µ–ª–∫–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–ø–æ—Ä.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "No_canel_seller1":
        bot.answer_callback_query(
            callback_query_id=call.id,
            show_alert=True,
            text="‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ã —Å–¥–µ–ª–∫–∏ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω",
        )

    elif call.data == "No_canel_seller":
        bot.answer_callback_query(
            callback_query_id=call.id,
            show_alert=True,
            text="‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ã —Å–¥–µ–ª–∫–∏ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω",
        )

    elif call.data == "Yes_canel_customer":
        try:
            info = functions.info_offers_customer(chat_id)
            if info[4] == "open":
                functions.yes_canel_customer2(chat_id)
                bot.send_message(
                    info[0], text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=keyboards.menu
                )
                bot.send_message(
                    info[1], text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=keyboards.menu
                )
            else:
                bot.answer_callback_query(
                    callback_query_id=call.id,
                    show_alert=True,
                    text="‚úÖ –°–¥–µ–ª–∫–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–ø–æ—Ä.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "No_canel_customer":
        bot.answer_callback_query(
            callback_query_id=call.id,
            show_alert=True,
            text="‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ã —Å–¥–µ–ª–∫–∏ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω",
        )

    elif call.data == "ok":
        try:
            info = functions.info_offer_customer(chat_id)
            if info[0] == "success":
                bot.send_message(
                    chat_id,
                    text="–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ —Ç–æ–≤–∞—Ä, –∏ –æ–Ω –≤–∞–ª–∏–¥–Ω—ã–π? –ï—Å–ª–∏ –Ω–µ—Ç, –∏–ª–∏ —É—Å–ª–æ–≤–∏—è –Ω–µ —Å–æ–±–ª—é–¥–µ–Ω—ã, —Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫—Ä—ã—Ç—å —Å–ø–æ—Ä.",
                    reply_markup=keyboards.ok_choise,
                )
            else:
                bot.send_message(
                    chat_id, text="‚úÖ –í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —Å–¥–µ–ª–∫—É, –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –≤–µ–¥—ë—Ç—Å—è —Å–ø–æ—Ä."
                )
        except:
            bot.send_message(chat_id, text=var.ERROR)

    elif call.data == "ok_canel":
        bot.answer_callback_query(
            callback_query_id=call.id,
            show_alert=True,
            text="–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏, —á—Ç–æ —Ç–æ–≤–∞—Ä –Ω–µ –ø–æ–ª—É—á–µ–Ω.",
        )

    elif call.data == "ok_ok":
        try:
            info = functions.info_offers_customer(chat_id)
            if info[4] == "success":
                info1 = functions.profile(info[0])
                info2 = functions.profile(info[1])
                functions.ok(
                    chat_id,
                    info[0],
                    info[2],
                    info[3],
                    info1[2],
                    info1[5],
                    info2[5],
                    info1[1],
                    info2[1],
                )
                bot.send_message(
                    chat_id,
                    text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\nüìù –•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –ø—Ä–æ–¥–∞–≤—Ü–µ?",
                    reply_markup=keyboards.add_review,
                )
                bot.send_message(
                    info[0],
                    text="‚úÖ –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\nüí∞ –î–µ–Ω—å–≥–∏ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à —Å—á—ë—Ç.\n\nüìù –°–µ–π—á–∞—Å –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ç–∑—ã–≤, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.",
                    reply_markup=keyboards.cancel_wait,
                )
                bot.send_message(
                    chat_id_bot,
                    text="‚úÖ C–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\nüí∞ –°—É–º–º–∞ - {sum_offer} —Ä—É–±–ª–µ–π\n\nüë§ –ü—Ä–æ–¥–∞–≤–µ—Ü - @{seller_nick}\nüë§ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å - @{customer_nick}".format(
                        sum_offer=info[2], seller_nick=info1[5], customer_nick=info2[5]
                    ),
                )
            else:
                bot.send_message(
                    chat_id, text="–í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ —Å–¥–µ–ª–∫—É, –∏–ª–∏ –Ω–∞–¥ –Ω–µ–π –≤–µ–¥—ë—Ç—Å—è —Å–ø–æ—Ä."
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "open_dispute":
        try:
            info = functions.info_offers_customer(chat_id)
            if info[4] == "dont_open":
                bot.send_message(chat_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ –µ—â—ë –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞!")
            else:
                if info[4] == "open":
                    bot.send_message(
                        chat_id,
                        text="‚õîÔ∏è –¢–æ–≤–∞—Ä –µ—â—ë –Ω–µ –±—ã–ª –≤–∞–º –ø–µ—Ä–µ–¥–∞–Ω. –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —á—Ç–æ –ø—Ä–æ–¥–∞–≤–µ—Ü —Ö–æ—á–µ—Ç –≤–∞—Å –æ–±–º–∞–Ω—É—Ç—å, –æ—Ç–º–µ–Ω–∏—Ç–µ —Å–¥–µ–ª–∫—É –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                            ADMIN_USERNAME
                        ),
                    )
                else:
                    if info[4] == "dispute":
                        bot.send_message(chat_id, text="‚õîÔ∏è –°–ø–æ—Ä —É–∂–µ –Ω–∞—á–∞—Ç.")
                    else:
                        info_c = functions.profile(info[1])
                        info_s = functions.profile(info[0])
                        functions.dispute_customer(chat_id)
                        bot.send_message(
                            chat_id,
                            text="–°–ø–æ—Ä –Ω–∞—á–∞—Ç, –ø—Ä–æ–¥–∞–≤–µ—Ü –æ–ø–æ–≤–µ—â—ë–Ω. –ï—Å–ª–∏ –¥–æ–ª–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                                ADMIN_USERNAME
                            ),
                        )
                        bot.send_message(
                            info[0],
                            text="–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –Ω–∞—á–∞–ª —Å–ø–æ—Ä –ø–æ –≤–∞—à–µ–º—É —Ç–æ–≤–∞—Ä—É, —Å–∫–æ—Ä–æ –≤–∞–º –Ω–∞–ø–∏—à–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –ï—Å–ª–∏ –¥–æ–ª–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                                ADMIN_USERNAME
                            ),
                        )
                        bot.send_message(
                            ADMIN_FIRST_CHAT_ID,
                            text="–ë—ã–ª –Ω–∞—á–∞—Ç —Å–ø–æ—Ä!\n\nID —Å–¥–µ–ª–∫–∏ - <b><code>{id}</code></b>\n–ü—Ä–æ–¥–∞–≤–µ—Ü - @{seller}\n–ü–æ–∫—É–ø–∞—Ç–µ–ª—å(–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª —Å–ø–æ—Ä) - @{customer}".format(
                                id=info[3], seller=info_s[5], customer=info_c[5]
                            ),
                            parse_mode="HTML",
                        )
        except:
            bot.send_message(chat_id, text=var.ERROR)

    elif call.data == "open_dispute_seller":
        try:
            info = functions.info_offers_seller(chat_id)
            if info[4] == "dont_open":
                bot.send_message(chat_id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ –µ—â—ë –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞!")
            else:
                if info[4] == "open":
                    bot.send_message(
                        chat_id,
                        text="–¢–æ–≤–∞—Ä –µ—â—ë –Ω–µ –±—ã–ª –≤–∞–º –ø–µ—Ä–µ–¥–∞–Ω. –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —á—Ç–æ –ø—Ä–æ–¥–∞–≤–µ—Ü —Ö–æ—á–µ—Ç –≤–∞–º —Å–∫–∞–º–Ω—É—Ç—å, –æ—Ç–º–µ–Ω–∏—Ç–µ —Å–¥–µ–ª–∫—É –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                            ADMIN_USERNAME
                        ),
                    )
                else:
                    if info[4] == "dispute":
                        bot.send_message(chat_id, text="‚õîÔ∏è –°–ø–æ—Ä —É–∂–µ –Ω–∞—á–∞—Ç.")
                    else:
                        info_c = functions.profile(info[1])
                        info_s = functions.profile(info[0])
                        functions.dispute_customer(chat_id)
                        bot.send_message(
                            chat_id,
                            text="–°–ø–æ—Ä –Ω–∞—á–∞—Ç, –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –æ–ø–æ–≤–µ—â—ë–Ω. –ï—Å–ª–∏ –¥–æ–ª–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                                ADMIN_USERNAME
                            ),
                        )
                        bot.send_message(
                            info[1],
                            text="–ü—Ä–æ–¥–∞–≤–µ—Ü –Ω–∞—á–∞–ª —Å–ø–æ—Ä, —Å–∫–æ—Ä–æ –≤–∞–º –Ω–∞–ø–∏—à–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä. –ï—Å–ª–∏ –¥–æ–ª–≥–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É @{}.".format(
                                ADMIN_USERNAME
                            ),
                        )
                        bot.send_message(
                            ADMIN_FIRST_CHAT_ID,
                            text="–ë—ã–ª –Ω–∞—á–∞—Ç —Å–ø–æ—Ä!\n\nID —Å–¥–µ–ª–∫–∏ - <b><code>{id}</code></b>\n–ü—Ä–æ–¥–∞–≤–µ—Ü - @{seller}\n–ü–æ–∫—É–ø–∞—Ç–µ–ª—å(–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª —Å–ø–æ—Ä) - @{customer}".format(
                                id=info[3], seller=info_s[5], customer=info_c[5]
                            ),
                            parse_mode="HTML",
                        )
        except:
            bot.send_message(chat_id, text=var.ERROR)

    elif call.data == "dispute_admin":
        msg = bot.send_message(
            chat_id, text='–í–≤–µ–¥–∏—Ç–µ ID —Å–¥–µ–ª–∫–∏. (–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫)'
        )
        bot.register_next_step_handler(msg, dispute_admin_func)

    elif call.data == "customer_true":
        msg = bot.send_message(
            chat_id,
            text='–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—ë—Ç –¥–µ–Ω—å–≥–∏, –∞ —Å–¥–µ–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞!\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ ID —Å–¥–µ–ª–∫–∏, –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫',
        )
        bot.register_next_step_handler(msg, customer_true_func)

    elif call.data == "seller_true":
        msg = bot.send_message(
            chat_id,
            text='–ü—Ä–æ–¥–∞–≤–µ—Ü –ø–æ–ª—É—á–∏—Ç –¥–µ–Ω—å–≥–∏, –∞ —Å–¥–µ–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞!\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ ID —Å–¥–µ–ª–∫–∏, –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫.',
        )
        bot.register_next_step_handler(msg, seller_true_func)

    elif call.data == "no_true":
        msg = bot.send_message(
            chat_id,
            text='–ü–æ–∫—É–ø–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—ë—Ç –¥–µ–Ω—å–≥–∏, –∞ —Å–¥–µ–ª–∫–∞ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–µ–Ω–∞!\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ ID —Å–¥–µ–ª–∫–∏, –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫.',
        )
        bot.register_next_step_handler(msg, customer_true_func)

    elif call.data == "canel_open_offer":
        try:
            info = functions.canel_open_offer(chat_id)
            if info[0] == "OK":
                bot.send_message(
                    chat_id,
                    text="üî• –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–æ–∑–≤–∞–Ω–æ.",
                    reply_markup=keyboards.menu,
                )
                bot.send_message(
                    info[1],
                    text="üî• –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –æ—Ç–æ–∑–≤–∞–ª —Å–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏.",
                    reply_markup=keyboards.menu,
                )
            else:
                bot.send_message(
                    chat_id,
                    text="üî• –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–æ–∑–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø—Ä–æ–¥–∞–≤–µ—Ü –µ–≥–æ —É–∂–µ –ø—Ä–∏–Ω—è–ª.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "canel_open_offer_seller":
        try:
            info = functions.canel_open_offer_seller(chat_id)
            if info[0] == "OK":
                bot.send_message(
                    chat_id,
                    text="üî• –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏ –æ—Ç–æ–∑–≤–∞–Ω–æ.",
                    reply_markup=keyboards.menu,
                )
                bot.send_message(
                    info[1],
                    text="üî• –ü—Ä–æ–¥–∞–≤–µ—Ü –æ—Ç–æ–∑–≤–∞–ª —Å–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ —Å–¥–µ–ª–∫–∏.",
                    reply_markup=keyboards.menu,
                )
            else:
                bot.send_message(
                    chat_id,
                    text="üî• –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–æ–∑–≤–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—å –µ–≥–æ —É–∂–µ –ø—Ä–∏–Ω—è–ª.",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "reviews":
        try:
            info1 = functions.info_offers_customer(chat_id)
            if info1 == None:
                info1 = functions.info_offers_seller(chat_id)
                info = functions.reviews(info1[1])
                if len(info) > 0:
                    bot.send_message(chat_id=chat_id, text=info)
                elif len(info) == 0:
                    bot.send_message(chat_id=chat_id, text="‚õîÔ∏è –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")
            else:
                info = functions.reviews(info1[0])
                if len(info) > 0:
                    bot.send_message(chat_id=chat_id, text=info)
                elif len(info) == 0:
                    bot.send_message(chat_id=chat_id, text="‚õîÔ∏è –æ—Ç–∑—ã–≤–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    if call.data == "add_review":
        try:
            info = functions.info_offer_customer(chat_id)
            if info[0] == "review":
                msg = bot.send_message(
                    chat_id,
                    text='üî• –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –æ —Å–¥–µ–ª–∫–µ, –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤—ã—à–ª–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫.',
                )
                bot.register_next_step_handler(msg, add_review)
            else:
                bot.edit_message_text(
                    chat_id=chat_id,
                    message_id=message_id,
                    text="–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Å–¥–µ–ª–∫—É.",
                    reply_markup=keyboards.menu,
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "up_login":
        try:
            info = functions.up_login(call.message.chat.username, call.message.chat.id)
            if info == None:
                bot.send_message(chat_id, text="–í–∞—à –ª–æ–≥–∏–Ω –æ–±–Ω–æ–≤–ª—ë–Ω!")
            else:
                bot.send_message(
                    chat_id,
                    text="–õ–æ–≥–∏–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–Ω—è—Ç—å —É–∂–µ –ø–æ–ª—É—á–∏–ª –¥—Ä—É–≥–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∏–ª–∏ –≤—ã –µ–≥–æ —É–∂–µ –∑–∞–Ω—è–ª–∏!",
                )
        except:
            bot.answer_callback_query(
                callback_query_id=call.id, show_alert=True, text=var.ERROR
            )

    elif call.data == "no_review":
        try:
            info = functions.info_offers_customer(chat_id)
            bot.send_message(
                info[0],
                text="‚ùÑÔ∏è –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç—ã–∑–≤.",
                reply_markup=keyboards.menu,
            )
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text="‚ùÑÔ∏è –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",
            )
            bot.send_message(chat_id, text=var.ENABLE_KEYBOARD, reply_markup=keyboards.menu)
            functions.close_offer(chat_id)
        except:
            bot.send_message(chat_id, text=var.ERROR)




