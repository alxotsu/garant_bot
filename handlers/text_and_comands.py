from telebot import types

from models import queries
from handlers import next_step_hadlers
from app.bot import bot
from app import config
from app import functions
from app import keyboards


@bot.message_handler(commands=["start"])
def start(message: types.Message):
    chat_id = message.chat.id
    if message.from_user.username is None:
        bot.send_message(
            chat_id, "‚õîÔ∏è –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º."
        )
    else:
        user = queries.new_user(chat_id)
        info = functions.check_user_blocks(user)
        if info is not None:
            bot.send_message(chat_id, info)
            return
        bot.send_message(
            chat_id,
            f"‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!",
            reply_markup=keyboards.menu,
        )


@bot.message_handler(commands=["admin"])
def start(message: types.Message):
    if functions.check_admin_permission(message.chat.id):

        user = queries.get_user(message.chat.id)
        if user is not None:
            info = functions.check_user_blocks(user)
            if info is not None:
                bot.send_message(message.chat.id, info)
                return

        bot.send_message(
            message.chat.id,
            f"‚úÖ {message.from_user.first_name}, –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.",
            reply_markup=keyboards.admin,
        )


@bot.message_handler(content_types=["text"])
def send_text(message):
    chat_id = message.chat.id
    user = queries.new_user(chat_id)
    try:
        info = functions.check_user_blocks(user)
        if info is not None:
            bot.send_message(chat_id, info)
            return

        if message.text.lower() == "üë§ –ø—Ä–æ—Ñ–∏–ª—å":
            bot.send_message(
                chat_id,
                f"üßæ –ü—Ä–æ—Ñ–∏–ª—å:\n\n"
                f"‚ùï –í–∞—à ChatID - <b><code>{user.chat_id}</code></b>\n"
                f"‚ùï –ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ - {len(user.customer_offers) + len(user.seller_offers)}\n\n"
                f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å - {user.balance} USDT\n"
                f"üí≥ –í–∞—à –∞–¥—Ä–µ—Å Metamask - {user.metamask_address if user.metamask_address is not None else '–ù–µ —É–∫–∞–∑–∞–Ω'}",
                reply_markup=keyboards.profile,
                parse_mode="HTML",
            )

        elif message.text.lower() == "üîí –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–¥–µ–ª–∫—É":
            bot.send_message(
                chat_id, "–í —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –≤—ã...", reply_markup=keyboards.init_offer
            )

        elif message.text.lower() == "‚≠êÔ∏è –æ –Ω–∞—Å":
            bot.send_message(
                chat_id,
                f"–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º: @{config.ADMIN_USERNAME}\n–ù–∞—à —á–∞—Ç: {config.BOT_CHAT_LINK}\n–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é: {config.INSTRUCTION}",
            )

        elif message.text.lower() == "üíµ –ø—Ä–æ—à–µ–¥—à–∏–µ —Å–¥–µ–ª–∫–∏":
            bot.send_message(
                chat_id,
                "–í—ã–≤–µ—Å—Ç–∏ –≤–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–¥–µ–ª–∫–∏ –≥–¥–µ –≤—ã...",
                reply_markup=keyboards.show_offers,
            )

        elif message.text == "–ë–∞–Ω-—Å–∏—Å—Ç–µ–º–∞":
            if not functions.check_admin_permission(message.chat.id):
                return
            bot.send_message(
                chat_id, text="–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=keyboards.bou
            )

        elif message.text == "–†–∞—Å—Å—ã–ª–∫–∞":
            if not functions.check_admin_permission(message.chat.id):
                return
            msg = bot.send_message(
                chat_id=chat_id,
                text='–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏.\n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫.',
            )
            bot.register_next_step_handler(
                msg, next_step_hadlers.send_message_for_all_users
            )

        elif message.text == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
            if not functions.check_admin_permission(message.chat.id):
                return
            bot.send_message(
                chat_id=chat_id,
                text="‚ùï –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n"
                f"‚ùï –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–æ—Ç–µ - {queries.get_all_users_count()}\n"
                f"‚ùï –ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Å–¥–µ–ª–æ–∫ - {queries.get_offers_count()}",
            )

        elif message.text == "–†–µ—à–µ–Ω–∏–µ —Å–ø–æ—Ä–∞":
            if not functions.check_admin_permission(message.chat.id):
                return
            msg = bot.send_message(
                chat_id,
                text='–í–≤–µ–¥–∏—Ç–µ ID —Å–¥–µ–ª–∫–∏.\n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ "-" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫.',
            )
            bot.register_next_step_handler(msg, next_step_hadlers.search_dispute)

    except Exception:
        bot.send_message(
            chat_id,
            "‚õîÔ∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å.\n\n"
            f"–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–∏–ª–∞—Å—å, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @{config.ADMIN_USERNAME}.",
        )
        raise
