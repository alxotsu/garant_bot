from telebot import types

from app.bot import bot
from app import functions
from app import keyboards
from app import config
from models import queries, Deal


def ban_user(message):
    if functions.ban_or_unban_user(message, True):
        bot.send_message(message.chat.id, text="‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω.")


def unban_user(message):
    if functions.ban_or_unban_user(message, False):
        bot.send_message(message.chat.id, text="‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–µ–Ω.")


def customer_solve_dispute(message):
    functions.solve_dispute(message, True)


def seller_solve_dispute(message):
    functions.solve_dispute(message, False)


def send_message_for_all_users(message):
    if not functions.check_admin_permission(message.chat.id):
        return

    if message.text == "-":
        bot.send_message(message.chat.id, text="–û—Ç–º–µ–Ω–∞...")
    else:
        users = queries.get_all_users()
        bot.send_message(message.chat.id, text="‚úÖ –ò–¥—ë—Ç —Ä–∞—Å—Å—ã–ª–∫–∞...")
        count_all = 0
        count_success = 0
        for user in users:
            count_all += 1
            if message.chat.id == user.chat_id:
                continue
            try:
                bot.send_message(user.chat_id, message.text)
                count_success += 1
            except:
                pass
        bot.send_message(
            message.chat.id,
            text="‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n"
            f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–∏–ª–∏ {count_success} –∏–∑ {count_all} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
        )


def search_dispute(message):
    if not functions.check_admin_permission(message.chat.id):
        return

    if message.text.startswith("-") or not message.text.isdigit():
        bot.send_message(message.chat.id, text="–û—Ç–º–µ–Ω–∞...")
    else:
        deal = queries.get_deal(int(message.text))
        if deal is None:
            bot.send_message(message.chat.id, text="‚õîÔ∏è –°–¥–µ–ª–∫–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!")
            return
        bot.send_message(
            message.chat.id,
            text=f"üßæ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–¥–µ–ª–∫–µ "
            + functions.format_deal_info(deal)
            + f"\n\n–ö—Ç–æ –ø—Ä–∞–≤ –≤ –¥–∞–Ω–Ω–æ–º —Å–ø–æ—Ä–µ?",
            reply_markup=keyboards.solve_dispute,
            parse_mode="HTML",
        )


def output(message):
    if not functions.is_wallet_amount(message.text):
        bot.send_message(message.chat.id, text="–û—Ç–º–µ–Ω–∞...")
        return

    user = queries.get_user(message.chat.id)
    output_size = float(message.text)

    if output_size > user.balance:
        bot.send_message(
            message.chat.id, text="‚õîÔ∏è –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞!"
        )
        return

    if float(output_size) < 10:
        bot.send_message(
            message.chat.id,
            text="‚õîÔ∏è –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ 10 USDT",
        )
        return

    amount = output_size * (1 - config.PERCENT / 100)
    user.balance -= output_size
    user.save()
    bot.send_message(message.chat.id, text="‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
    queries.new_withdrawal(user.chat_id, user.metamask_address, amount)


def change_metamask(message):
    if message.text.startswith("-"):
        bot.send_message(message.chat.id, text="–û—Ç–º–µ–Ω–∞...")
        return

    user = queries.get_user(message.chat.id)
    user.metamask_address = message.text
    user.save()
    bot.send_message(message.chat.id, text="‚úÖ Metamask —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


def search_seller_for_init(message):
    second_user = functions.search_second_user(message)

    if second_user is None:
        return

    queries.new_deal(message.chat.id, second_user.chat_id)

    bot.send_message(
        message.chat.id,
        "üßæ –ü—Ä–æ—Ñ–∏–ª—å:\n\n"
        + functions.format_user_info(second_user)
        + "\n\nüî•–í —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º.",
        reply_markup=keyboards.sentence_deal,
        parse_mode="HTML",
    )
    bot.send_message(
        chat_id=message.chat.id,
        text="–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã...",
        reply_markup=types.ReplyKeyboardRemove(),
    )


def search_customer_for_init(message):
    second_user = functions.search_second_user(message)

    if second_user is None:
        return

    queries.new_deal(second_user.chat_id, message.chat.id)

    bot.send_message(
        message.chat.id,
        "üßæ –ü—Ä–æ—Ñ–∏–ª—å:\n\n"
        + functions.format_user_info(second_user)
        + "\n\nüî•–í —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ –≤—ã –±—É–¥–µ—Ç–µ –ø—Ä–æ–¥–∞–≤—Ü–æ–º.",
        reply_markup=keyboards.sentence_deal,
        parse_mode="HTML",
    )
    bot.send_message(
        chat_id=message.chat.id,
        text="–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã...",
        reply_markup=types.ReplyKeyboardRemove(),
    )


def set_price(message):
    if message.text.startswith("-") or not functions.is_wallet_amount(message.text):
        bot.send_message(message.chat.id, text="–û—Ç–º–µ–Ω–∞...")
        return

    deal = queries.get_user(message.chat.id).seller_deal
    if deal.amount != 0:
        return

    deal.amount = float(message.text)
    deal.save()

    bot.send_message(
        deal.seller_id,
        text=f"üí• –°—É–º–º–∞ —Å–¥–µ–ª–∫–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞.\n\nüí∞ –°–¥–µ–ª–∫–∞ {functions.format_deal_info(deal)}",
        reply_markup=keyboards.seller_panel,
        parse_mode="HTML"
    )
    bot.send_message(
        deal.customer_id,
        text=f"üí• –ë—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ —Å—É–º–º–∞ —Å–¥–µ–ª–∫–∏.\n\nüí∞ –°–¥–µ–ª–∫–∞ {functions.format_deal_info(deal)}",
        reply_markup=keyboards.customer_panel,
        parse_mode="HTML"
    )


def add_review(message):
    deal = queries.get_user(message.chat.id).customer_deal
    if deal.status != Deal.Status.review:
        return

    if message.text == "-":
        bot.send_message(message.chat.id, text="–û—Ç–º–µ–Ω–∞...")
        review = None
        bot.send_message(
            deal.seller_id,
            text="‚ùÑÔ∏è –ü–æ–∫—É–ø–∞—Ç–µ–ª—å –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç–∑—ã–≤.",
            reply_markup=keyboards.menu,
        )
        bot.send_message(
            chat_id=deal.customer_id,
            text="‚ùÑÔ∏è –°–¥–µ–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",
            reply_markup=keyboards.menu,
        )
    else:
        review = message.text

    offer = queries.new_offer(deal, review)
    if review is not None:
        bot.send_message(
            message.chat.id,
            text="üìù –û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–≤–ª–µ–Ω.",
            reply_markup=keyboards.menu,
        )
        bot.send_message(
            offer.seller_id,
            text=f"üìù –û –≤–∞—Å –æ—Å—Ç–∞–≤–∏–ª–∏ –æ—Ç–∑—ã–≤!\n\n{message.text}",
            reply_markup=keyboards.menu,
        )
